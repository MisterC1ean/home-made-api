exit
project.save()
project
exit
project.user_id=params[:user_id]
something.title=params[:title]
something.save()
something.save
something = Project.new()
project.save
project.save()
project
exit
params
exit
project
exit
params
exit
params
exit
params
exit
project.image.attach(params[:image])
project
exit
project.image.attach(params[:image])
params
exit
project.image.attach(params[:image])
project
exit
project.image.attach(params[:image])
params
project
exit
project
image
exit
params
exit
params
exit
params
exit
params[:image]
params.image
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
params
exit
project.image.attach(io: File.open('/Users/robertkeller/Desktop'), filename: 'image.png')
project.image.attach(io: File.open('/Users/robertkeller/Desktop'), filename: 'image.png', content_type: 'image/png')
project.image.attach(io: File.open('/Users/robertkeller/Desktop'), filename: 'image.png', content_type: 'image/png', indentify: false)
project.image.attach(io: File.open('/Users/robertkeller/Desktop'), filename: 'image.png')
project.image.attach(io: File.open('/Users/robertkeller/Desktop', filename: 'image.png')
project.image.attach
project = Project.create!(project_params)
project
exit
project.image.attach(path:'image.png', name:'image.png')
exit
    url_for(object.image)
  def image_url
  end
          .tap { |attrs| attrs['name'] = attrs.delete('filename') }
          .merge(url: image_url)
          .slice('filename', 'byte_size')
    object.image.blob.attributes
    return unless object.image.attached?
project.image.attach(io:def image
params
exit
params
exit
params
exit
project.image.attach(params[:image])
project.image.attach(project_params)
project.image.attach(project_params
params[:image]
params[:image
project
exit
params[:image][0]
params[:image]
params
project
exit
project
params
exit
params
exit
params
exit
exiot
params[:id]
params.id
params
exit
